#!/usr/bin/env ansible-playbook

- name: Group hosts by distribution 
  hosts: all
  gather_facts: True
  tasks:
    - name: create groups based on distro
      group_by: key={{ ansible_distribution }}

- name: Add entries for local machines 
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Add batcave to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.222 batcave" 
    - name: Add stargate to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.227 stargate" 
    - name: Add atlantis to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.229 atlantis" 
    - name: Add docker to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.233 docker" 
    - name: Add nas to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.234 nas" 
    - name: Add pi to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.235 pi" 
    - name: Add pi2 to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.236 pi2" 

- name: Add newrelic monitoring agent 
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Add newrelic repository 
      apt_repository: repo='deb http://apt.newrelic.com/debian/ newrelic non-free' state=present
    - name: Add newrelic keyfile 
      apt_key: url=https://download.newrelic.com/548C16BF.gpg state=present
    - name: Add newrelic agent 
      apt: name=newrelic-sysmond state=present update_cache=yes
    - name: Add license key to the configuration 
      command: nrsysmond-config --set license_key=9a3465dc990aa65ee1037041a7d0f770ef428cfd 
    - name: Restart the agent 
      service: name=newrelic-sysmond state=restarted

- name: Install Docker
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Install Docker keys
      apt_key: state=present keyserver=keyserver.ubuntu.com id=36A1D7869245C8950F966E92D8576A8BA88D21E9
    - name: Install Docker repository
      apt_repository: repo='deb https://get.docker.io/ubuntu docker main' state=present
    - name: Install Docker
      apt: name=lxc-docker state=latest update_cache=true cache_valid_time=600
    - name: Expose the daemon over insecure HTTP
      lineinfile: dest=/etc/default/docker line='DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"'
    - name: Set Memory and Swap Accounting
      lineinfile: dest=/etc/default/grub regexp='^GRUB_CMDLINE_LINUX=""' line='GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
    - name: Rebuild GRUB
      command: update-grub
    - name: Restart Docker
      command: service docker restart
#TODO: figure out how to add the real account and not the root account
#   - name: Add user to the docker group
#     user: name=ron state=present groups=docker

- name: Install Redis Docker Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: Redis Data
        command: 'docker run --detach --name redis-data --volume /data busybox'
      - name: Redis
        command: 'docker run --detach --name redis --hostname redis --publish 6379:6379 --volumes-from redis-data --restart always redis redis-server --appendonly yes'

- name: Install RabbitMQ Docker Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: RabbitMQ Data
        command: 'docker run --detach --name rabbitmq-data --volume /var/lib/rabbitmq busybox'
      - name: RabbitMQ
        command: 'docker run --detach --name rabbitmq --hostname rabbitmq --publish 5672:5672 --publish 15672:15672 --volumes-from rabbitmq-data --restart always rabbitmq:management'

- name: Tweak User Account
# hosts: Ubuntu
  hosts: nobody
  sudo: False
  tasks:
#TODO: figure out how to add the real account and not the root account
    - name: set editor to VI
#     lineinfile: dest={{ ansible_env.HOME }}/.bashrc line='set -o vi'
      lineinfile: dest=/home/ron/.bashrc line='set -o vi'
