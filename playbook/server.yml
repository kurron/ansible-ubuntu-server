#!/usr/bin/env ansible-playbook

- name: Group hosts by distribution 
  hosts: all
  gather_facts: True
  tasks:
    - name: create groups based on distro
      group_by: key={{ ansible_distribution }}

- name: Add entries for local machines 
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Add batcave to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.222 batcave" 
    - name: Add stargate to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.227 stargate" 
    - name: Add atlantis to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.229 atlantis" 
    - name: Add docker to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.233 docker" 
    - name: Add nas to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.234 nas" 
    - name: Add pi to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.235 pi" 
    - name: Add pi2 to hostfile
      lineinfile: dest=/etc/hosts line="192.168.1.236 pi2" 

- name: Add newrelic monitoring agent 
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Add newrelic repository 
      apt_repository: repo='deb http://apt.newrelic.com/debian/ newrelic non-free' state=present
    - name: Add newrelic keyfile 
      apt_key: url=https://download.newrelic.com/548C16BF.gpg state=present
    - name: Add newrelic agent 
      apt: name=newrelic-sysmond state=present update_cache=yes
    - name: Add license key to the configuration 
      command: nrsysmond-config --set license_key=9a3465dc990aa65ee1037041a7d0f770ef428cfd 
    - name: Restart the agent 
      service: name=newrelic-sysmond state=restarted

- name: Install Docker
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Install Docker keys
      apt_key: state=present keyserver=keyserver.ubuntu.com id=36A1D7869245C8950F966E92D8576A8BA88D21E9
    - name: Install Docker repository
      apt_repository: repo='deb https://get.docker.io/ubuntu docker main' state=present
    - name: Install Docker
      apt: name=lxc-docker state=latest update_cache=true cache_valid_time=600
    - name: Expose the daemon over insecure HTTP
      lineinfile: dest=/etc/default/docker line='DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"'
    - name: Set Memory and Swap Accounting
      lineinfile: dest=/etc/default/grub regexp='^GRUB_CMDLINE_LINUX=""' line='GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
    - name: Rebuild GRUB
      command: update-grub
    - name: Restart Docker
      command: service docker restart
#TODO: figure out how to add the real account and not the root account
#   - name: Add user to the docker group
#     user: name=ron state=present groups=docker

- name: Install Redis Docker Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: Redis Data
        command: docker run --detach --name redis-data --volume /data busybox creates=/var/redis-data
      - name: Guard Redis Data
        command: touch /var/redis-data creates=/var/redis-data
      - name: Redis
        command: docker run --detach --name redis --hostname redis --publish 6379:6379 --volumes-from redis-data --restart always redis redis-server --appendonly yes creates=/var/redis
      - name: Guard Redis
        command: touch /var/redis creates=/var/redis

- name: Install RabbitMQ Docker Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: RabbitMQ Data
        command: docker run --detach --name rabbitmq-data --volume /var/lib/rabbitmq busybox creates=/var/rabbitmq-data
      - name: Guard RabbitMQ Data
        command: touch /var/rabbitmq-data creates=/var/rabbitmq-data
      - name: RabbitMQ
        command: docker run --detach --name rabbitmq --hostname rabbitmq --publish 5672:5672 --publish 15672:15672 --volumes-from rabbitmq-data --restart always rabbitmq:management creates=/var/rabbitmq
      - name: Guard RabbitMQ
        command: touch /var/rabbitmq creates=/var/rabbitmq

- name: Install PostgreSQL Docker Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: PostgreSQL Data
        command: docker run --detach --name postgresql-data --volume /var/lib/postgresql/data busybox creates=/var/postgresql-data
      - name: Guard PostgreSQL Data
        command: touch /var/postgresql-data creates=/var/postgresql-data
      - name: PostgreSQL
        command: docker run --detach --name postgresql --hostname postgresql --publish 5432:5432 --volumes-from postgresql-data --restart always --env POSTGRES_PASSWORD=posgres postgres creates=/var/postgresql
      - name: Guard PostgreSQL
        command: touch /var/postgresql creates=/var/postgresql

- name: Install MySQL Docker Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: MySQL Data
        command: docker run --detach --name mysql-data --volume /var/lib/mysql --volume /etc/mysql/conf.d busybox creates=/var/mysql-data
# custom configuration files should be copied into /etc/mysql/conf.d
      - name: Guard MySQL Data
        command: touch /var/mysql-data creates=/var/mysql-data
      - name: MySQL
        command: docker run --detach --name mysql --hostname mysql --publish 3306:3306 --volumes-from mysql-data --restart always --env MYSQL_ROOT_PASSWORD=root --env MYSQL_USER=mysql --env MYSQL_PASSWORD=mysql --env MYSQL_DATABASE=experiment mysql creates=/var/mysql
      - name: Guard MySQL
        command: touch /var/mysql creates=/var/mysql

- name: Install MongoDB Docker Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: MongoDB Data
        command: docker run --detach --name mongodb-data --volume /data/db busybox creates=/var/mongodb-data
      - name: Guard MongoDB Data
        command: touch /var/mongodb-data creates=/var/mongodb-data
      - name: MongoDB
        command: docker run --detach --name mongodb --hostname mongodb --publish 27017:27017 --volumes-from mongodb-data --restart always mongo --storageEngine=wiredTiger --notablescan --journalCommitInterval=300 --directoryperdb creates=/var/mongodb
      - name: Guard MongoDB
        command: touch /var/mongodb creates=/var/mongodb

- name: Install BitTorrent Sync Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: BitTorrent Sync Data
        command: docker run --detach --name btsync-data --volume /mnt/bookkeeping --volume /mnt/sync busybox creates=/var/btsync-data
      - name: Guard BitTorrent Sync Data
        command: touch /var/btsync-data creates=/var/btsync-data
      - name: BitTorrent Sync
        command: docker run --detach --name btsync --publish 1234:1234 --publish 8888:8888 --volumes-from btsync-data --restart always --net host kurron/docker-bittorrent-sync creates=/var/btsync
      - name: Guard BitTorrent Sync
        command: touch /var/btsync creates=/var/btsync

- name: Install Plex Media Server Containers
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: Install NFS client
        apt: name=nfs-common state=latest update_cache=true cache_valid_time=600
      - name: Create the NAS mount point
        file: path=/mnt/nas state=directory
      - name: Mount NAS drive
        mount: fstype=nfs name=/mnt/nas src=nas:/media state=mounted opts=ro
      - name: Plex Data
        command: docker run --detach --name plex-data --volume /config busybox creates=/var/plex-data
      - name: Guard Plex Data
        command: touch /var/plex-data creates=/var/plex-data
      - name: Plex Media Server
        command: docker run --detach --name plex --publish 32400:32400 --volumes-from plex-data --volumes-from btsync-data --volume /mnt/nas:/data --restart always --net host timhaak/plex creates=/var/plex
      - name: Guard Plex 
        command: touch /var/plex creates=/var/plex

- name: Install BitTorrent Client 
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: Transmission Data
        command: docker run --detach --name transmission-data --volume /var/lib/transmission-daemon busybox creates=/var/transmission
      - name: Transmission Data
        command: touch /var/transmission-data creates=/var/transmission-data
      - name: Transmission
        command: docker run --detach --name transmission --publish 9091:9091 --publish 51413:51413 --volumes-from transmission-data --restart always --net host --env TRUSER=admin --env TRPASSWD=admin --env TIMEZONE=UTC dperson/transmission creates=/var/transmission
      - name: Guard Transmission 
        command: touch /var/transmission creates=/var/transmission

- name: Tweak User Account
# hosts: Ubuntu
  hosts: nobody
  sudo: False
  tasks:
#TODO: figure out how to add the real account and not the root account
    - name: set editor to VI
#     lineinfile: dest={{ ansible_env.HOME }}/.bashrc line='set -o vi'
      lineinfile: dest=/home/ron/.bashrc line='set -o vi'
